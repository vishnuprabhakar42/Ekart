pipeline {
    agent any
    
    tools{
        jdk "jdk17"
        maven "maven3"
    }
    
    environment{
        
        SCANNER_HOME= tool "sonar-scanner"
    }

    stages {
        stage('git checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/vishnuprabhakar42/Ekart.git'
            }
        }
        
        stage('Compile') {
            steps {
                sh "mvn compile"
            }
        }
        
        stage('test') {
            steps {
                sh "mvn test -DskipTests=true"
            }
        }
        
        // stage('test') {
        //     steps {
        //         sh "mvn test -DskipTests=true"
        //     }
        // }
        
        stage('OWASP') {
            steps {
                dependencyCheck additionalArguments: '--scan ./ ', odcInstallation: 'DC'
                dependencyCheckPublisher pattern: '**/dependency-check-report.xml'  
            }
        }
        
        stage('sonarqube Ananlysis'){
            steps {
                withSonarQubeEnv('sonar') {
                    sh ''' $SCANNER_HOME/bin/sonar-scanner -Dsonar.projectName=Ekart \
                    -Dsonar.projectKey=Ekart -Dsonar.java.binaries=. '''
}
            }
        }
        
        stage('Build') {
            steps {
                sh "mvn package -DskipTests=true"
            }
        }
        
        stage('Build amd Tag Docker Image') {
            steps {
                script{
                    withDockerRegistry(credentialsId: 'docker-cred') {
                        sh "docker build -t shopping-cart:dev -f docker/Dockerfile ."
                        sh "docker tag shopping-cart:dev vishnuprabhakar42/shopping-cart:dev "
}
                }
            }
        }
        
        stage('push docker image') {
            steps {
                script{
                    withDockerRegistry(credentialsId: 'docker-cred') {
                        
                        sh "docker push vishnuprabhakar42/shopping-cart:dev "
}
                }
            }
        }
        
        stage('Deploy in docker container') {
            steps {
                script{
                    withDockerRegistry(credentialsId: 'docker-cred') {
                        
                        sh "docker run -d -p 8070:8070 vishnuprabhakar42/shopping-cart:dev "
}
                }
            }
        }
    }
}
